---

- hosts: localhost

# GET Quote of the Day API #
  tasks:
    - name: Get Quote of the Day from API
      uri:
        url: https://quotes.rest/qod
        headers: 
          Accept-Encoding: gzip, deflate, br
          Connection: keep-alive
        method: GET
        return_content: yes
        body_format: json
      register: QuoteoftheDay

# Print Quote of the Day #
    - debug:
        msg: "{{ QuoteoftheDay }}"

# Save RAW Response to file #
    - name: Save Full Response to JSON file
      copy: content="{{ QuoteoftheDay }}" dest=../quotes/FullResponseQuoteoftheDay_{{ ansible_date_time.date }}.json

# Save Only Quote to Text File # 
    - name: Save Quote to File 
      copy: content="{{ QuoteoftheDay.json.contents.quotes }}" dest=../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.txt

# Save Nice YAML RAW Response to file #
    - name: Save Nice YAML Full Response to YAML file
      copy: content="{{ QuoteoftheDay | to_nice_yaml }}" dest=../quotes/FullResponseQuoteoftheDay_{{ ansible_date_time.date }}.yml

# Save Nice JSON RAW Response to file #
    - name: Save Nice JSON Full Response to JSON file
      copy: content="{{ QuoteoftheDay | to_nice_json }}" dest=../quotes/EasyToReadFullResponseQuoteoftheDay_{{ ansible_date_time.date }}.json

# JSON_Query to identify Author #
    - name: "Get Quote Author"
      debug:
        var: item
      with_items: 
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].author')  | flatten(levels=1) }}"
      register: quoteoftheday_author

# JSON_Query to identify Quote #
    - name: "Get Quote"
      debug:
        var: item
      with_items: 
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].quote')  | flatten(levels=1) }}"
      register: quoteoftheday_quote

# Create Text File with Author and Quote of the Day #
    - name: Save Simple Text File with Queried Author and Quote
      copy: content="{{ quoteoftheday_quote | json_query('results[*].item') }}" dest=../quotes/AuthorandQuoteoftheDay_{{ ansible_date_time.date }}.txt

    - name: Add Author
      lineinfile:
        path: ../quotes/AuthorandQuoteoftheDay_{{ ansible_date_time.date }}.txt
        insertbefore: BOF
        line: "{{ quoteoftheday_author | json_query('results[*].item') }}"

# JSON_Query remaining values #
    - name: "Nested Tags loop inside Quotes Loop"
      debug:
        var: item
      with_nested:
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].author') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].background') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].category') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].date') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].language') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].permalink') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].tags[*]') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].title') | flatten(levels=1) }}"
        - "{{ QuoteoftheDay.json | json_query('contents.quotes[*].quote') | flatten(levels=1) }}"        
      register: QuoteLoopOutput

# Create CSV file with results #
    - name: Create CSV for Quote of the Day
      copy: content="{{ QuoteLoopOutput | json_query('results[*].item') }}" dest=../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.csv

# Format CSV #
    - name: Format CSV File New Lines
      replace:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.csv
        regexp: '],'
        replace: ']\n'

# Format CSV #
    - name: Format CSV File Clean Up
      replace:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.csv
        regexp: '\[|\]|"'
        replace: ''

# Add Header Row to CSV #
    - name: Header Row
      lineinfile:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.csv
        insertbefore: BOF
        line: Author,Background,Category,Date,Language,Permalink,Tags,Title,Quote

# Set Facts method for example to create Markdown #
    - set_fact:
        date: "{{ QuoteoftheDay['date'] }}"
        author: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].author') }}"
        background: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].background') }}"
        category: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].category') }}"
        language: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].language') }}"
        permalink: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].permalink') }}"
        tags: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].tags[*]') }}"
        title: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].title') }}"
        quote: "{{ QuoteoftheDay | json_query('json.contents.quotes[*].quote') }}"

# Create Markdown file with results #
    - name: Create Markdown
      copy: 
        content: | 
          {% for host in ansible_play_hosts %}
          |{{ hostvars[host].date }} | {{ hostvars[host].author }} | {{ hostvars[host].background }} | {{ hostvars[host].category }} | {{ hostvars[host].language }} | {{ hostvars[host].permalink }} | {{ hostvars[host].tags }} | {{ hostvars[host].quote }} |
          {% endfor %}
        dest: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.md
      
# Format Markdown #
    - name: Format Markdown File Clean Up
      replace:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.md
        regexp: '\[|\]|\"'
        replace: ''      

# Format Markdown #
    - name: Format Markdown File Clean Up
      replace:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.md
        regexp: "'"
        replace: ''

# Add Header Rows to Markdown #
    - name: Header Row
      lineinfile:
        path: ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.md
        insertbefore: BOF
        line: "{{ item.property }}"
      with_items:
        - { property: '| ---- | ------ | ---------- | -------- | -------- | --------- | ---- | ----- | ----- |' }
        - { property: '| Date | Author | Background | Category | Language | Permalink | Tags | Title | Quote |' }
        - { property: '# Quote of the Day' }

# Create Mind Map # 
    - name: create Quote of the Day Mind Map 
      shell: "markmap --no-open ../quotes/QuoteOfTheDay_{{ ansible_date_time.date }}.md -o ../quotes/SEQuoteOfTheDay_{{ ansible_date_time.date }}.html"
      register: markmap